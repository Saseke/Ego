<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yoke.ego.common.mapper.LogMapper">
  <resultMap id="BaseResultMap" type="com.yoke.ego.common.pojo.Log">
    <constructor>
      <idArg column="log_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="log_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_request_param" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="log_user_ip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="log_created" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="log_request_type" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, log_name, log_type, log_url, log_request_param, log_user_id, log_user_ip, 
    log_created, log_request_type
  </sql>
  <select id="selectByExample" parameterType="com.yoke.ego.common.pojo.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ego_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ego_log
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ego_log
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoke.ego.common.pojo.LogExample">
    delete from ego_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoke.ego.common.pojo.Log">
    <selectKey keyProperty="logId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ego_log (log_name, log_type, log_url, 
      log_request_param, log_user_id, log_user_ip, 
      log_created, log_request_type)
    values (#{logName,jdbcType=VARCHAR}, #{logType,jdbcType=VARCHAR}, #{logUrl,jdbcType=VARCHAR}, 
      #{logRequestParam,jdbcType=VARCHAR}, #{logUserId,jdbcType=BIGINT}, #{logUserIp,jdbcType=VARCHAR}, 
      #{logCreated,jdbcType=TIMESTAMP}, #{logRequestType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yoke.ego.common.pojo.Log">
    <selectKey keyProperty="logId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ego_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logName != null">
        log_name,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="logUrl != null">
        log_url,
      </if>
      <if test="logRequestParam != null">
        log_request_param,
      </if>
      <if test="logUserId != null">
        log_user_id,
      </if>
      <if test="logUserIp != null">
        log_user_ip,
      </if>
      <if test="logCreated != null">
        log_created,
      </if>
      <if test="logRequestType != null">
        log_request_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logName != null">
        #{logName,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=VARCHAR},
      </if>
      <if test="logUrl != null">
        #{logUrl,jdbcType=VARCHAR},
      </if>
      <if test="logRequestParam != null">
        #{logRequestParam,jdbcType=VARCHAR},
      </if>
      <if test="logUserId != null">
        #{logUserId,jdbcType=BIGINT},
      </if>
      <if test="logUserIp != null">
        #{logUserIp,jdbcType=VARCHAR},
      </if>
      <if test="logCreated != null">
        #{logCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="logRequestType != null">
        #{logRequestType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoke.ego.common.pojo.LogExample" resultType="java.lang.Long">
    select count(*) from ego_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ego_log
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=BIGINT},
      </if>
      <if test="record.logName != null">
        log_name = #{record.logName,jdbcType=VARCHAR},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=VARCHAR},
      </if>
      <if test="record.logUrl != null">
        log_url = #{record.logUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.logRequestParam != null">
        log_request_param = #{record.logRequestParam,jdbcType=VARCHAR},
      </if>
      <if test="record.logUserId != null">
        log_user_id = #{record.logUserId,jdbcType=BIGINT},
      </if>
      <if test="record.logUserIp != null">
        log_user_ip = #{record.logUserIp,jdbcType=VARCHAR},
      </if>
      <if test="record.logCreated != null">
        log_created = #{record.logCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logRequestType != null">
        log_request_type = #{record.logRequestType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ego_log
    set log_id = #{record.logId,jdbcType=BIGINT},
      log_name = #{record.logName,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=VARCHAR},
      log_url = #{record.logUrl,jdbcType=VARCHAR},
      log_request_param = #{record.logRequestParam,jdbcType=VARCHAR},
      log_user_id = #{record.logUserId,jdbcType=BIGINT},
      log_user_ip = #{record.logUserIp,jdbcType=VARCHAR},
      log_created = #{record.logCreated,jdbcType=TIMESTAMP},
      log_request_type = #{record.logRequestType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoke.ego.common.pojo.Log">
    update ego_log
    <set>
      <if test="logName != null">
        log_name = #{logName,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=VARCHAR},
      </if>
      <if test="logUrl != null">
        log_url = #{logUrl,jdbcType=VARCHAR},
      </if>
      <if test="logRequestParam != null">
        log_request_param = #{logRequestParam,jdbcType=VARCHAR},
      </if>
      <if test="logUserId != null">
        log_user_id = #{logUserId,jdbcType=BIGINT},
      </if>
      <if test="logUserIp != null">
        log_user_ip = #{logUserIp,jdbcType=VARCHAR},
      </if>
      <if test="logCreated != null">
        log_created = #{logCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="logRequestType != null">
        log_request_type = #{logRequestType,jdbcType=VARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoke.ego.common.pojo.Log">
    update ego_log
    set log_name = #{logName,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=VARCHAR},
      log_url = #{logUrl,jdbcType=VARCHAR},
      log_request_param = #{logRequestParam,jdbcType=VARCHAR},
      log_user_id = #{logUserId,jdbcType=BIGINT},
      log_user_ip = #{logUserIp,jdbcType=VARCHAR},
      log_created = #{logCreated,jdbcType=TIMESTAMP},
      log_request_type = #{logRequestType,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
</mapper>