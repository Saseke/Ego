<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yoke.ego.common.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.yoke.ego.common.pojo.User">
    <constructor>
      <idArg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="user_created" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="user_updated" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="user_memo" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_tel" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_last_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="user_id_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_real_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_sex" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="user_image" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_account_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_points" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_student_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_school" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_issaler" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_status, user_created, user_updated, user_memo, user_name, user_tel, 
    user_address, user_last_time, user_id_number, user_real_name, user_sex, user_image, 
    user_password, user_account_number, user_points, user_time, user_email, user_student_id, 
    user_school, user_issaler
  </sql>
  <select id="selectByExample" parameterType="com.yoke.ego.common.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ego_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ego_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ego_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoke.ego.common.pojo.UserExample">
    delete from ego_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoke.ego.common.pojo.User">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ego_user (user_status, user_created, user_updated, 
      user_memo, user_name, user_tel, 
      user_address, user_last_time, user_id_number, 
      user_real_name, user_sex, user_image, 
      user_password, user_account_number, user_points, 
      user_time, user_email, user_student_id, 
      user_school, user_issaler)
    values (#{userStatus,jdbcType=TINYINT}, #{userCreated,jdbcType=TIMESTAMP}, #{userUpdated,jdbcType=TIMESTAMP}, 
      #{userMemo,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userTel,jdbcType=VARCHAR}, 
      #{userAddress,jdbcType=VARCHAR}, #{userLastTime,jdbcType=TIMESTAMP}, #{userIdNumber,jdbcType=VARCHAR}, 
      #{userRealName,jdbcType=VARCHAR}, #{userSex,jdbcType=TINYINT}, #{userImage,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{userAccountNumber,jdbcType=VARCHAR}, #{userPoints,jdbcType=BIGINT}, 
      #{userTime,jdbcType=BIGINT}, #{userEmail,jdbcType=VARCHAR}, #{userStudentId,jdbcType=VARCHAR}, 
      #{userSchool,jdbcType=VARCHAR}, #{userIssaler,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yoke.ego.common.pojo.User">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ego_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="userCreated != null">
        user_created,
      </if>
      <if test="userUpdated != null">
        user_updated,
      </if>
      <if test="userMemo != null">
        user_memo,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userTel != null">
        user_tel,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="userLastTime != null">
        user_last_time,
      </if>
      <if test="userIdNumber != null">
        user_id_number,
      </if>
      <if test="userRealName != null">
        user_real_name,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userImage != null">
        user_image,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userAccountNumber != null">
        user_account_number,
      </if>
      <if test="userPoints != null">
        user_points,
      </if>
      <if test="userTime != null">
        user_time,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userStudentId != null">
        user_student_id,
      </if>
      <if test="userSchool != null">
        user_school,
      </if>
      <if test="userIssaler != null">
        user_issaler,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userStatus != null">
        #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="userCreated != null">
        #{userCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="userUpdated != null">
        #{userUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="userMemo != null">
        #{userMemo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userLastTime != null">
        #{userLastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userIdNumber != null">
        #{userIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null">
        #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=TINYINT},
      </if>
      <if test="userImage != null">
        #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userAccountNumber != null">
        #{userAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="userPoints != null">
        #{userPoints,jdbcType=BIGINT},
      </if>
      <if test="userTime != null">
        #{userTime,jdbcType=BIGINT},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userStudentId != null">
        #{userStudentId,jdbcType=VARCHAR},
      </if>
      <if test="userSchool != null">
        #{userSchool,jdbcType=VARCHAR},
      </if>
      <if test="userIssaler != null">
        #{userIssaler,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoke.ego.common.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from ego_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ego_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=TINYINT},
      </if>
      <if test="record.userCreated != null">
        user_created = #{record.userCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userUpdated != null">
        user_updated = #{record.userUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userMemo != null">
        user_memo = #{record.userMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userTel != null">
        user_tel = #{record.userTel,jdbcType=VARCHAR},
      </if>
      <if test="record.userAddress != null">
        user_address = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.userLastTime != null">
        user_last_time = #{record.userLastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userIdNumber != null">
        user_id_number = #{record.userIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userRealName != null">
        user_real_name = #{record.userRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null">
        user_sex = #{record.userSex,jdbcType=TINYINT},
      </if>
      <if test="record.userImage != null">
        user_image = #{record.userImage,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userAccountNumber != null">
        user_account_number = #{record.userAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userPoints != null">
        user_points = #{record.userPoints,jdbcType=BIGINT},
      </if>
      <if test="record.userTime != null">
        user_time = #{record.userTime,jdbcType=BIGINT},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userStudentId != null">
        user_student_id = #{record.userStudentId,jdbcType=VARCHAR},
      </if>
      <if test="record.userSchool != null">
        user_school = #{record.userSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.userIssaler != null">
        user_issaler = #{record.userIssaler,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ego_user
    set user_id = #{record.userId,jdbcType=BIGINT},
      user_status = #{record.userStatus,jdbcType=TINYINT},
      user_created = #{record.userCreated,jdbcType=TIMESTAMP},
      user_updated = #{record.userUpdated,jdbcType=TIMESTAMP},
      user_memo = #{record.userMemo,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_tel = #{record.userTel,jdbcType=VARCHAR},
      user_address = #{record.userAddress,jdbcType=VARCHAR},
      user_last_time = #{record.userLastTime,jdbcType=TIMESTAMP},
      user_id_number = #{record.userIdNumber,jdbcType=VARCHAR},
      user_real_name = #{record.userRealName,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=TINYINT},
      user_image = #{record.userImage,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_account_number = #{record.userAccountNumber,jdbcType=VARCHAR},
      user_points = #{record.userPoints,jdbcType=BIGINT},
      user_time = #{record.userTime,jdbcType=BIGINT},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_student_id = #{record.userStudentId,jdbcType=VARCHAR},
      user_school = #{record.userSchool,jdbcType=VARCHAR},
      user_issaler = #{record.userIssaler,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoke.ego.common.pojo.User">
    update ego_user
    <set>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="userCreated != null">
        user_created = #{userCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="userUpdated != null">
        user_updated = #{userUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="userMemo != null">
        user_memo = #{userMemo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        user_tel = #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userLastTime != null">
        user_last_time = #{userLastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userIdNumber != null">
        user_id_number = #{userIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null">
        user_real_name = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=TINYINT},
      </if>
      <if test="userImage != null">
        user_image = #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userAccountNumber != null">
        user_account_number = #{userAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="userPoints != null">
        user_points = #{userPoints,jdbcType=BIGINT},
      </if>
      <if test="userTime != null">
        user_time = #{userTime,jdbcType=BIGINT},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userStudentId != null">
        user_student_id = #{userStudentId,jdbcType=VARCHAR},
      </if>
      <if test="userSchool != null">
        user_school = #{userSchool,jdbcType=VARCHAR},
      </if>
      <if test="userIssaler != null">
        user_issaler = #{userIssaler,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoke.ego.common.pojo.User">
    update ego_user
    set user_status = #{userStatus,jdbcType=TINYINT},
      user_created = #{userCreated,jdbcType=TIMESTAMP},
      user_updated = #{userUpdated,jdbcType=TIMESTAMP},
      user_memo = #{userMemo,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_tel = #{userTel,jdbcType=VARCHAR},
      user_address = #{userAddress,jdbcType=VARCHAR},
      user_last_time = #{userLastTime,jdbcType=TIMESTAMP},
      user_id_number = #{userIdNumber,jdbcType=VARCHAR},
      user_real_name = #{userRealName,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=TINYINT},
      user_image = #{userImage,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_account_number = #{userAccountNumber,jdbcType=VARCHAR},
      user_points = #{userPoints,jdbcType=BIGINT},
      user_time = #{userTime,jdbcType=BIGINT},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_student_id = #{userStudentId,jdbcType=VARCHAR},
      user_school = #{userSchool,jdbcType=VARCHAR},
      user_issaler = #{userIssaler,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>